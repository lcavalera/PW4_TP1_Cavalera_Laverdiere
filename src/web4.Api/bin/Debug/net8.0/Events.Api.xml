<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Events.Api</name>
    </assembly>
    <members>
        <member name="M:Events.Api.Controllers.EvenementsController.Get">
             <summary>
             Retourne une liste des evenements 
             </summary>
             <remarks>
             
                 GET api/evenements
            
             </remarks>
             <response code="200">evenements trouvés et retournés</response>
             <response code="500">service indisponible pour le moment</response>
             <returns></returns>
        </member>
        <member name="M:Events.Api.Controllers.EvenementsController.GetById(System.Int32)">
             <summary>
             Retourne un'evenement spécifique à partir de son id
             </summary>
             <param name="id">id de l'evenement à retourner</param>
             <remarks>
             
                 GET /Evenement/1
            
             </remarks>
             <response code="200">evenement trouvé et retourné</response>
             <response code="404">evenement introuvable pour l'id spécifié</response>
             <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.EvenementsController.GetByIdVille(System.Int32)">
             <summary>
             Retourne une liste des evenements à partir de l'id de la ville spécifiée
             </summary>
             <param name="villeId">id de la ville de les evenements à retourner</param>
             <remarks>
             
                 GET /Evenement/1/Ville
            
             </remarks>
             <response code="200">evenements trouvés et retournés</response>
             <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.EvenementsController.Post(Events.Api.Entites.Evenement)">
             <summary>
             Ajoute un'evenement à la base de donnée
             </summary>
             <param name="evenement">evenement à ajouter</param>
             <returns>Un nouveau evenement a été créé</returns>
             <remarks>
             Sample request:
            
                 POST /Evenement
                 {
                    "id": 1,
                    "dateDebut": "date de debut de l'evenement",
                    "dateDeFin": "date de fin de l'evenement"
                    "Titre": "titre de l'evenement",
                    "Description": "description de l'evenement",
                    "Categories": "liste de categories de l'evenement"
                    "Adresse": "adresse de l'evenement",
                    "NomOrganisateur": "nom de l'organisateur de l'evenement"
                    "Ville": "Ville de l'evenement",
                    "Prix": "Prix de l'evenement"
                 }
            
             </remarks>
             <response code="201">evenement ajouté avec succès</response>
             <response code="200">traitement executé avec succès, contenu retourné</response>
             <response code="204">traitement executé avec succès, aucune contenu retourné</response>
             <response code="400">model Invalide, mauvaise requête</response>
             <response code="404">ville introuvable pour l'id spécifié</response>
             <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.EvenementsController.Put(System.Int32,Events.Api.Entites.Evenement)">
            <summary>
            Modification d'un'evenement
            </summary>
            <param name="id">id de l'evenement à modifier</param>
            <param name="ville"></param>
            <returns>La evenement a été modifié</returns>
            <response code="200">traitement executé avec succès, contenu retourné</response>
            <response code="204">evenement modifié avec succès, aucune contenu retourné</response>
            <response code="400">model Invalide, mauvaise requête</response>
            <response code="404">evenement introuvable pour l'id spécifié</response>
            <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.EvenementsController.Delete(System.Int32)">
            <summary>
            Supprime une ville
            </summary>
            <param name="id">id de la ville à supprimer</param>
            <response code="204">ville supprimé avec succès, aucune contenu retourné</response>
            <response code="404">ville introuvable pour l'id spécifié</response>
            <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.VillesController.Get">
             <summary>
             Retourne une liste des villes 
             </summary>
             <remarks>
             
                 GET api/villes
            
             </remarks>
             <response code="200">villes trouvés et retournés</response>
             <response code="500">service indisponible pour le moment</response>
             <returns></returns>
        </member>
        <member name="M:Events.Api.Controllers.VillesController.GetById(System.Int32)">
             <summary>
             Retourne une ville spécifique à partir de son id
             </summary>
             <param name="id">id de la ville à retourner</param>
             <remarks>
             
                 GET /Ville/1
            
             </remarks>
             <response code="200">ville trouvé et retourné</response>
             <response code="404">ville introuvable pour l'id spécifié</response>
             <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.VillesController.Post(Events.Api.Entites.Ville)">
             <summary>
             Ajoute une ville à la base de donnée
             </summary>
             <param name="ville">ville à ajouter</param>
             <returns>Une nouvelle ville a été créé</returns>
             <remarks>
             Sample request:
            
                 POST /Ville
                 {
                    "id": 1,
                    "nom": "nom de la ville",
                    "region": "region de la ville"
                 }
            
             </remarks>
             <response code="201">ville ajouté avec succès</response>
             <response code="200">traitement executé avec succès, contenu retourné</response>
             <response code="204">traitement executé avec succès, aucune contenu retourné</response>
             <response code="400">model Invalide, mauvaise requête</response>
             <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.VillesController.Put(System.Int32,Events.Api.Entites.Ville)">
            <summary>
            Modification d'une ville
            </summary>
            <param name="id">id de la ville à modifier</param>
            <param name="ville"></param>
            <returns>La ville a été modifié</returns>
            <response code="200">traitement executé avec succès, contenu retourné</response>
            <response code="204">ville modifié avec succès, aucune contenu retourné</response>
            <response code="400">model Invalide, mauvaise requête</response>
            <response code="404">ville introuvable pour l'id spécifié</response>
            <response code="500">service indisponible pour le moment</response>
        </member>
        <member name="M:Events.Api.Controllers.VillesController.Delete(System.Int32)">
            <summary>
            Supprime une ville
            </summary>
            <param name="id">id de la ville à supprimer</param>
            <response code="204">ville supprimé avec succès, aucune contenu retourné</response>
            <response code="404">ville introuvable pour l'id spécifié</response>
            <response code="500">service indisponible pour le moment</response>
        </member>
    </members>
</doc>
