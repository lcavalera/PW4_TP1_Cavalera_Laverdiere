// <auto-generated />
using System;
using Events.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Events.Api.Migrations
{
    [DbContext(typeof(EventsContext))]
<<<<<<<< HEAD:src/web4.Api/Migrations/20240212150450_Initial.Designer.cs
    [Migration("20240212150450_Initial")]
    partial class Initial
========
    [Migration("20240212150445_initial")]
    partial class initial
>>>>>>>> 56cca31db3d90c20c7b4fe8242de8d940dc888ab:src/web4.Api/Migrations/20240212150445_initial.Designer.cs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Events.Api.Entites.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<int>("Nom")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Events.Api.Entites.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateDeFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomOrganisateur")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Prix")
                        .HasColumnType("integer");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("Events.Api.Entites.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstValide")
                        .HasColumnType("boolean");

                    b.Property<int>("EvenementID")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NombrePlaces")
                        .HasColumnType("integer");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Events.Api.Entites.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("Events.Api.Entites.Categorie", b =>
                {
                    b.HasOne("Events.Api.Entites.Evenement", null)
                        .WithMany("Categories")
                        .HasForeignKey("EvenementId");
                });

            modelBuilder.Entity("Events.Api.Entites.Evenement", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
